# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: "trust"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:6.2.5-alpine
      mongo:
        image: mongo:4.4.10

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        always-auth: true
        node-version: ${{ matrix.node-version }}
        registry-url: https://registry.npmjs.org
        scope: '@boxyhq'
        cache: 'npm'
    - run: npm ci
    - run: npm run test
    - run: |
        publishTag="latest"
        if [[ "$GITHUB_REF" == *\/release ]]
        then
          echo "Release branch"
        else
          echo "Dev branch"
          publishTag="beta"
          versionSuffixTag="-beta.${GITHUB_RUN_NUMBER}"
          sed "s/\(^[ ]*\"version\"\:[ ]*\".*\)\",/\1${versionSuffixTag}\",/" < package.json > package.json.new
          mv package.json.new package.json
        fi
        npm publish --tag $publishTag --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  build:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ github.repository }}:latest,${{ github.repository }}:${{ steps.slug.outputs.sha8 }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
